var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API","title":"API","text":"","category":"page"},{"location":"api/","page":"API","title":"API","text":"Modules = [qMRIColors]","category":"page"},{"location":"api/#qMRIColors.colorLogRemap","page":"API","title":"qMRIColors.colorLogRemap","text":"colorLogRemap(oriCmap, loLev=0.0, upLev=size(cmap)[1])\n\nApplies logarithmic scaling to oriCmap based on loLev and upLev.\n\nArguments\n\noriCmap: Original colormap array.\nloLev: Lower bound of the color range.\nupLev: Upper bound of the color range.\n\nReturns\n\nlogCmap: Colormap with logarithmic scaling applied.\n\n\n\n\n\n","category":"function"},{"location":"api/#qMRIColors.relaxationColorMap","page":"API","title":"qMRIColors.relaxationColorMap","text":"relaxationColorMap(maptype::AbstractString, x::AbstractArray, loLev=minimum(x), upLev=maximum(x))\n\nApplies a color mapping to a numerical array x based on a specified relaxation map type. Reads color data from a CSV file and adjusts values in x to provide a color-coded visualization.\n\nThis function is commonly used in data visualization, especially for MRI relaxation maps, to display data in a color-coded format for easier interpretation.\n\nArguments\n\nmaptype::AbstractString: The relaxation map type to use for color mapping. Common values include \"T1\", \"T2\", \"R1\", \"R2\", (see documentation).\nx::AbstractArray: An array of numerical values to be color-mapped.\nloLev: Lower bound for color mapping. Defaults to the minimum of x.\nupLev: Upper bound for color mapping. Defaults to the maximum of x.\n\nReturns\n\nrgb_vec: A vector of RGB colors representing the mapped values.\nxClip: A modified version of x with values adjusted based on loLev and upLev.\n\nDescription\n\nCalls read_map_csv(maptype) to load the colormap.\nAdjusts x based on loLev and upLev to produce xClip.\nMaps values to colors using colorLogRemap and converts to RGB.\n\n\n\n\n\n","category":"function"},{"location":"api/#qMRIColors.relaxationColorMap-2","page":"API","title":"qMRIColors.relaxationColorMap","text":"relaxationColorMap(maptype::AbstractString, loLev=0, upLev=256)\n\nSimplified variant of the above function. Only generates the RGB vector of colors without modifying an array x.\n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = qMRIColors","category":"page"},{"location":"#qMRIColors","page":"Home","title":"qMRIColors","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for qMRIColors.","category":"page"},{"location":"#Colormaps-available","page":"Home","title":"Colormaps available","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"using qMRIColors\nusing CairoMakie","category":"page"},{"location":"#Lipari","page":"Home","title":"Lipari","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This colormap is used for :","category":"page"},{"location":"","page":"Home","title":"Home","text":"T1","category":"page"},{"location":"","page":"Home","title":"Home","text":"cmap = relaxationColorMap(\"T1\")\ncgrad(cmap)","category":"page"},{"location":"#Navia","page":"Home","title":"Navia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This colormap is used for :","category":"page"},{"location":"","page":"Home","title":"Home","text":"T2\nT2*\nT1rho\nT1ρ","category":"page"},{"location":"","page":"Home","title":"Home","text":"cmap = relaxationColorMap(\"T2\")\ncgrad(cmap)","category":"page"},{"location":"#Reverse-lipari","page":"Home","title":"Reverse lipari","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This colormap is used for :","category":"page"},{"location":"","page":"Home","title":"Home","text":"R1","category":"page"},{"location":"","page":"Home","title":"Home","text":"cmap = relaxationColorMap(\"R1\")\ncgrad(cmap)","category":"page"},{"location":"#Reverse-navia","page":"Home","title":"Reverse navia","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This colormap is used for :","category":"page"},{"location":"","page":"Home","title":"Home","text":"R2\nR2*\nR1rho\nR1ρ\n","category":"page"},{"location":"","page":"Home","title":"Home","text":"cmap = relaxationColorMap(\"R2\")\ncgrad(cmap)","category":"page"},{"location":"example/","page":"Example","title":"Example","text":"using FileIO\nusing Downloads\nusing qMRIColors\nusing CairoMakie\n\nurl = \"https://github.com/mfuderer/colorResources/raw/refs/heads/main/sampleT1map.jld\"\ndest_path = \"sampleT1map.jld\"\n# Download the file\nDownloads.download(url, dest_path)\nx = FileIO.load(\"sampleT1map.jld\")[\"sampleT1map\"]\n\nloLev = 700\nupLev = 1500\ncmap,imClip = relaxationColorMap(\"T1\",x,loLev,upLev)\nbegin\n  f=CairoMakie.Figure()\n  ax=Axis(f[1,1],aspect=DataAspect(),title = \"clip\")\n  h=heatmap!(ax,rotr90(imClip),colormap=cmap,colorrange=(loLev,upLev))\n  Colorbar(f[1,2],h)\n  hidedecorations!(ax)\n\n  ax=Axis(f[1,3],aspect=DataAspect(),title = \"no clip\")\n  h=heatmap!(ax,rotr90(x),colormap=cmap,colorrange=(loLev,upLev))\n  Colorbar(f[1,4],h)\n  hidedecorations!(ax)\n  f\nend","category":"page"}]
}
